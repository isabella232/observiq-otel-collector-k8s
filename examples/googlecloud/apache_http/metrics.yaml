# yamllint disable rule:line-length
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: httpd
data:
  collector.yaml: |
    receivers:
      apache:
        collection_interval: 60s
        endpoint: http://localhost:80/server-status?auto
        tls:
          insecure: true

    processors:
      resource:
        attributes:
        - key: k8s.cluster.name
          value: "${OTEL_RESOURCE_ATTRIBUTES_CLUSTER_NAME}"
          action: upsert
        - key: k8s.namespace.name
          value: "${OTEL_RESOURCE_ATTRIBUTES_NAMESPACE}"
          action: upsert
        - key: k8s.pod.name
          value: "${OTEL_RESOURCE_ATTRIBUTES_POD_NAME}"
          action: upsert
        # Google requires cloud.region, cloud.availability_zone and cloud.platform in order
        # to map to container, pod, node, and cluster resource types. These values are hardcoded
        # here because this config is intended for an on-premise solution.
        - key: cloud.region
          value: us-east1
          action: insert
        - key: cloud.availability_zone
          value: us-east1-b
          action: insert
        - key: cloud.platform
          value: gcp_kubernetes_engine
          action: insert

    exporters:
      googlecloud:

    service:
      pipelines:
        metrics:
          receivers:
            - apache
          processors:
            - resource
          exporters:
            - googlecloud

  # Default container config with the addition of
  # 'SetHandler server-status', which is the endpoint that will be used
  # to read apache http process metrics.
  httpd.conf: |
    ServerRoot "/usr/local/apache2"
    Listen 80
    <Location "/server-status">
        SetHandler server-status
    </Location>
    LoadModule mpm_event_module modules/mod_mpm_event.so
    LoadModule authn_file_module modules/mod_authn_file.so
    LoadModule authn_core_module modules/mod_authn_core.so
    LoadModule authz_host_module modules/mod_authz_host.so
    LoadModule authz_groupfile_module modules/mod_authz_groupfile.so
    LoadModule authz_user_module modules/mod_authz_user.so
    LoadModule authz_core_module modules/mod_authz_core.so
    LoadModule access_compat_module modules/mod_access_compat.so
    LoadModule auth_basic_module modules/mod_auth_basic.so
    LoadModule reqtimeout_module modules/mod_reqtimeout.so
    LoadModule filter_module modules/mod_filter.so
    LoadModule mime_module modules/mod_mime.so
    LoadModule log_config_module modules/mod_log_config.so
    LoadModule env_module modules/mod_env.so
    LoadModule headers_module modules/mod_headers.so
    LoadModule setenvif_module modules/mod_setenvif.so
    LoadModule version_module modules/mod_version.so
    LoadModule unixd_module modules/mod_unixd.so
    LoadModule status_module modules/mod_status.so
    LoadModule autoindex_module modules/mod_autoindex.so
    LoadModule alias_module modules/mod_alias.so
    <IfModule unixd_module>
    User daemon
    Group daemon
    </IfModule>
    ServerAdmin you@example.com
    <Directory />
        AllowOverride none
        Require all denied
    </Directory>
    DocumentRoot "/usr/local/apache2/htdocs"
    <Directory "/usr/local/apache2/htdocs">
        Options Indexes FollowSymLinks
        AllowOverride None
        Require all granted
    </Directory>
    <IfModule dir_module>
        DirectoryIndex index.html
    </IfModule>
    <Files ".ht*">
        Require all denied
    </Files>
    ErrorLog /proc/self/fd/2
    LogLevel warn
    <IfModule log_config_module>
        LogFormat "%h %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\"" combined
        LogFormat "%h %l %u %t \"%r\" %>s %b" common
        <IfModule logio_module>
          LogFormat "%h %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\" %I %O" combinedio
        </IfModule>
        CustomLog /proc/self/fd/1 common
    </IfModule>
    <IfModule alias_module>
        ScriptAlias /cgi-bin/ "/usr/local/apache2/cgi-bin/"
    </IfModule>
    <Directory "/usr/local/apache2/cgi-bin">
        AllowOverride None
        Options None
        Require all granted
    </Directory>
    <IfModule headers_module>
        RequestHeader unset Proxy early
    </IfModule>
    <IfModule mime_module>
        TypesConfig conf/mime.types
        AddType application/x-compress .Z
        AddType application/x-gzip .gz .tgz
    </IfModule>
    <IfModule proxy_html_module>
    Include conf/extra/proxy-html.conf
    </IfModule>
---
apiVersion: v1
kind: Service
metadata:
  name: httpd
  labels:
    app: httpd
spec:
  ports:
    - port: 80
      name: http
  selector:
    app: httpd
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: httpd
spec:
  selector:
    matchLabels:
      app: httpd
  replicas: 2
  template:
    metadata:
      labels:
        app: httpd
    spec:
      containers:
        - name: httpd
          image: httpd:2.4
          ports:
            - containerPort: 80
              name: http
          readinessProbe:
            httpGet:
              path: /server-status
              port: http
          livenessProbe:
            httpGet:
              path: /server-status
              port: http
          volumeMounts:
            - mountPath: /usr/local/apache2/conf/httpd.conf
              subPath: httpd.conf
              name: config

        # BEGIN Collector Side Car. This configuration relies on the volumes
        # "gcp-credentials" and "config" defined at the bottom of this file.
        - name: otc-container
          image: observiq/observiq-otel-collector:1.9.0
          imagePullPolicy: IfNotPresent
          args:
            - --config=/conf/collector.yaml
          env:
            - name: OTEL_RESOURCE_ATTRIBUTES_CLUSTER_NAME
              value: apache # change me to the name of your cluster.
            - name: OTEL_RESOURCE_ATTRIBUTES_POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: OTEL_RESOURCE_ATTRIBUTES_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            - name: OTEL_RESOURCE_ATTRIBUTES_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: GOOGLE_APPLICATION_CREDENTIALS
              value: /otel/credentials.json
          resources:
            requests:
              cpu: 50m
              memory: 50Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /conf/collector.yaml
              subPath: collector.yaml
              name: config
            - mountPath: /otel/credentials.json
              name: gcp-credentials
              subPath: credentials.json
      # End Collector Side Car

      volumes:
        - name: config
          configMap:
            name: httpd
            items:
              - key: httpd.conf
                path: httpd.conf
              - key: collector.yaml
                path: collector.yaml
        - name: gcp-credentials
          secret:
            defaultMode: 420
            secretName: gcp-credentials
