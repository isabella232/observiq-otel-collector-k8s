---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: observiq-otel-collector
  namespace: default
  annotations:
    # example: observiq-otel-collector@myproject.iam.gserviceaccount.com
    iam.gke.io/gcp-service-account: <gsa email>
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app: observiq-otel-collector
  name: observiq-otel-collector
rules:
  - apiGroups:
      - ""
    resources:
      - events
      - namespaces
      - namespaces/status
      - nodes
      - nodes/spec
      - nodes/stats
      - nodes/proxy
      - pods
      - pods/status
      - replicationcontrollers
      - replicationcontrollers/status
      - resourcequotas
      - services
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - apps
    resources:
      - daemonsets
      - deployments
      - replicasets
      - statefulsets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - extensions
    resources:
      - daemonsets
      - deployments
      - replicasets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - batch
    resources:
      - jobs
      - cronjobs
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - autoscaling
    resources:
      - horizontalpodautoscalers
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app: observiq-otel-collector
  name: observiq-otel-collector
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: observiq-otel-collector
subjects:
  - kind: ServiceAccount
    name: observiq-otel-collector
    namespace: default
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: observiq-otel-collector
  labels:
    app: observiq-otel-collector
data:
  collector.yaml: |
    receivers:
      plugin/container:
        path: /etc/otel/plugins/container_logs.yaml

    processors:
      k8sattributes:
        auth_type: serviceAccount
        passthrough: false
        pod_association:
        - from: resource_attribute
          name: k8s.pod.uid
        - from: resource_attribute
          name: k8s.pod.name
        filter:
            node_from_env_var: ${KUBE_NODE_NAME}

      resourcedetection:
        detectors: [gke]
        timeout: 2s
        override: true

      batch:
        send_batch_max_size: 200
        send_batch_size: 200

    exporters:
      googlecloud:
        project: otel-k8s-dev
      logging:

    service:
      pipelines:
        logs:
          receivers:
            - plugin/container
          processors:
            - k8sattributes
            - resourcedetection
            - batch
          exporters:
            - googlecloud
            - logging
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: observiq-otel-collector
  labels:
    app: observiq-otel-collector
spec:
  selector:
    matchLabels:
      app: observiq-otel-collector
  template:
    metadata:
      labels:
        app: observiq-otel-collector
    spec:
      containers:
        - args:
            - --config=/conf/collector.yaml
          image: observiq/observiq-otel-collector:1.11.1
          imagePullPolicy: IfNotPresent
          name: otc-container
          resources:
            # Default values for Daemonset's deployed to GKE Autopilot.
            limits:
              cpu: 50m
              ephemeral-storage: 100Mi
              memory: 100Mi
            requests:
              cpu: 50m
              ephemeral-storage: 100Mi
              memory: 100Mi
          env:
            - name: KUBE_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
          volumeMounts:
            - mountPath: /conf
              name: otc-internal
            - mountPath: /var/log
              name: varlog
              readOnly: true
      dnsPolicy: ClusterFirstWithHostNet
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        # Must be able to mount host volume and read logs
        # from filesystem and journald.
        runAsUser: 0
      serviceAccount: observiq-otel-collector
      serviceAccountName: observiq-otel-collector
      terminationGracePeriodSeconds: 30
      volumes:
        - configMap:
            defaultMode: 420
            items:
              - key: collector.yaml
                path: collector.yaml
            name: observiq-otel-collector
          name: otc-internal
        - hostPath:
            path: /var/log
          name: varlog
